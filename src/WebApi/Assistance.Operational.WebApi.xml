<?xml version="1.0"?>
<doc>
  <assembly>
    <name>Assistance.Operational.WebApi</name>
  </assembly>
  <members>
    <member name="M:Assistance.Operational.WebApi.Builders.MappingBuilder.BuildAutoMapper">
      <summary>
        Build mapping configuration.
      </summary>
      <returns></returns>
    </member>
    <member name="T:Assistance.Operational.WebApi.Controllers.AccountController">
      <summary>
        Handles every aspect of the account creation and users/companies management
      </summary>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.AccountController.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Logging.ILogger{ControllerBase},AutoMapper.IMapper,Assistance.Operational.Bll.Services.IAccountService)">
      <summary>
        Constructor
      </summary>
      <param name="logger"></param>
      <param name="mapper"></param>
      <param name="accountService"></param>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.AccountController.RegisterUser(Dto.RegisterUserRequestDto)">
      <summary>
        Registers a new user
      </summary>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.AccountController.RecoverPassword(Dto.PasswordUpdateDto)">
      <summary>
        Sends a password recovery email to the user
      </summary>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.AccountController.UpdateUserPassword(System.String)">
      <summary>
        Updates an user's forgotten password from a token
      </summary>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.AccountController.GetUser(System.String)">
      <summary>
        Gets an user from its Id
      </summary>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.AccountController.RegisterCompany(Dto.RegisterCompanyRequestDto)">
      <summary>
        Registers a new Company
      </summary>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.AccountController.CheckCompanyExists(System.String)">
      <summary>
        Checks if a SIRET number already exist
      </summary>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.AccountController.CheckUserExists(System.String)">
      <summary>
        Checks if an user already exist
      </summary>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.AccountController.CreateToken(Dto.UserCredentialsDto)">
      <summary>
        Logs an user in from its email and password, and returns a bearer token.
      </summary>
      <param name="login"></param>
      <returns>A bearer token</returns>
    </member>
    <member name="T:Assistance.Operational.WebApi.Controllers.ActivityController">
      <summary>
        Controller that handles activity reports and grids.
      </summary>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.ActivityController.#ctor(Microsoft.Extensions.Logging.ILogger{ControllerBase},AutoMapper.IMapper,Assistance.Operational.Bll.Services.IActivityService)">
      <summary>
        Constructor.
      </summary>
      <param name="logger"></param>
      <param name="mapper"></param>
      <param name="activityService"></param>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.ActivityController.GetActivityFromMission(System.String)">
      <summary>
        Gets all the activities of a mission.
      </summary>
      <param name="missionId"></param>
      <returns></returns>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.ActivityController.GetById(System.String,System.String)">
      <summary>
        Gets an activity by id.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.ActivityController.AcceptActivityModificationProposal(System.String,System.String)">
      <summary>
        Accepts activity report modifications
      </summary>
      <returns>The activity.</returns>
      <param name="id">Identifier.</param>
      <param name="userId">User identifier.</param>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.ActivityController.GetActivityFromUser(System.String,System.Nullable{Dto.ActivityStatusEnum})">
      <summary>
        Gets all the activities an user is involved in.
      </summary>
      <param name="userId"></param>
      <param name="status">The state of the activities required. Default : Generated status</param>
      <returns></returns>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.ActivityController.GenerateGrid">
      <summary>
        Gets all the days of the current month, with a flag specifying if the day is workable.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.ActivityController.ExportActivity(System.String)">
      <summary>
        Generate excel file
      </summary>
      <param name="id">Activity id</param>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.ActivityController.GetActivityFromMissionAndMonth(System.String,System.DateTime)">
      <summary>
        Gets the mission activity from a given month
      </summary>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.ActivityController.SendReports">
      <summary>
        Triggers the activity notifications sender at the end the month (called by a web job). Do not use this endpoint by yourself.
      </summary>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.ActivityController.SignActivityReport(System.String,System.String,Microsoft.AspNetCore.Http.IFormFile)">
      <summary>
        Signs an activity report and returns back the updated object.
      </summary>
      <param name="activityId">The activity report to sign</param>
      <param name="userId">The signing user</param>
      <param name="file">Signature file</param>
      <returns></returns>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.ActivityController.UpdateActivityReport(System.String,Dto.ActivityDto)">
      <summary>
        Upates an activity
      </summary>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.ActivityController.Delete(System.String)">
      <summary>
        Deletes an activity report
      </summary>
      <param name="id"></param>
      <returns></returns>
    </member>
    <member name="T:Assistance.Operational.WebApi.Controllers.DashboardController">
      <summary>
        Manages the user dashboard
      </summary>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.DashboardController.#ctor(Microsoft.Extensions.Logging.ILogger{ControllerBase},AutoMapper.IMapper,Assistance.Operational.Bll.Services.IDashboardService)">
      <summary>
        Constructor
      </summary>
      <param name="logger"></param>
      <param name="mapper"></param>
      <param name="dashboardService"></param>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.DashboardController.GetOrganizationsFromMemberId(System.String)">
      <summary>
        Gets the organizations the user is a member of.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.DashboardController.GetOrganizationCountFromMemberId(System.String)">
      <summary>
        Gets the organization count the user is a member of.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.DashboardController.GetLatestMissions(System.String)">
      <summary>
        Gets the 5 last missions the specified user is involved in.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.DashboardController.GetMissionCount(System.String,System.Boolean)">
      <summary>
        Counts the missions where the specified user is involved in.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.DashboardController.GetLatestCustomers(System.String)">
      <summary>
        Gets the 5 last customers of the specified user.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.DashboardController.GetDashboardCounts(System.String)">
      <summary>
        Gets list counts for Missions, Clients and Events
      </summary>
      <returns>DashboardCountDto</returns>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.DashboardController.GetOrganizationMissionCount(System.String)">
      <summary>
        Gets mission count of an organization
      </summary>
      <returns>OrganizationDto</returns>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.DashboardController.GetEventsByUserId(System.String)">
      <summary>
        Gets all events from user
      </summary>
    </member>
    <member name="T:Assistance.Operational.WebApi.Controllers.EventController">
      <summary>
        Manages the events
      </summary>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.EventController.#ctor(Microsoft.Extensions.Logging.ILogger{ControllerBase},AutoMapper.IMapper,Assistance.Operational.Bll.Services.IEventService)">
      <summary>
        Constructor
      </summary>
      <param name="logger"></param>
      <param name="mapper"></param>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.EventController.MarkEventAsRead(System.String,Dto.EventDto)">
      <summary>
        Partially updates an event
      </summary>
      <param name="eventId">Event id</param>
      <param name="eventDto">Updated event</param>
      <returns></returns>
    </member>
    <member name="T:Assistance.Operational.WebApi.Controllers.FileController">
      <summary>
        Service that manages files
      </summary>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.FileController.#ctor(Microsoft.Extensions.Logging.ILogger{ControllerBase},AutoMapper.IMapper,Assistance.Operational.Bll.Services.IFileService)">
      <summary>
        Constructor
      </summary>
      <param name="logger"></param>
      <param name="mapper"></param>
      <param name="fileService"></param>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.FileController.PostFile(System.String,Microsoft.AspNetCore.Http.IFormFile)">
      <summary>
        Uploads an user profile pic
      </summary>
      <returns>The mission</returns>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.FileController.PostOrgaFile(System.String,Microsoft.AspNetCore.Http.IFormFile)">
      <summary>
        Uploads an organization profile pic
      </summary>
      <returns>The mission</returns>
    </member>
    <member name="T:Assistance.Operational.WebApi.Controllers.InvoiceController">
      <summary>
        Service that manages invoices
      </summary>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.InvoiceController.#ctor(Microsoft.Extensions.Logging.ILogger{ControllerBase},AutoMapper.IMapper,Assistance.Operational.Bll.Services.IInvoiceService)">
      <summary>
        Constructor
      </summary>
      <param name="logger"></param>
      <param name="mapper"></param>
      <param name="invoiceService"></param>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.InvoiceController.Get(System.String)">
      <summary>
        Gets an invoice.
      </summary>
      <returns>The mission</returns>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.InvoiceController.GetAllByMissionId(System.String,System.Nullable{System.Int32})">
      <summary>
        Get by mission id, in the limit of the quantity specified
      </summary>
      <param name="missionId">Mission id to retreive the invoices from</param>
      <param name="quantity">The quantity of elements to return. Specifying zero will return all elements.</param>
      <returns>Invoice list</returns>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.InvoiceController.GetAllByMissionIds(System.Collections.Generic.List{System.String})">
      <summary>
        Get all by multiple mission ids
      </summary>
      <param name="ids">id list</param>
      <returns>Invoice list</returns>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.InvoiceController.GetAllByIssuer(System.String,System.Nullable{System.Int32})">
      <summary>
        Get all the invoices from the issuer id
      </summary>
      <param name="issuerId">The id of the issuer of the invoice(s)</param>
      <param name="quantity">The quantity of elements to return</param>
      <returns>Invoice list</returns>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.InvoiceController.GetAllByReceiverId(System.String,System.Nullable{System.Int32})">
      <summary>
        Get the invoices from the recipient id
      </summary>
      <param name="recepientId">The id of the recipient of the invoice(s)</param>
      <param name="quantity">The quantity of elements to return</param>
      <returns>Invoice list</returns>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.InvoiceController.GetByReceiverId(System.String,System.Nullable{System.Int32})">
      <summary>
        Get the invoices from the organization ID
      </summary>
      <param name="organizationId">The id of the organization of the invoice(s)</param>
      <param name="quantity">The quantity of elements to return</param>
      <returns>Invoice list</returns>
    </member>
    <member name="T:Assistance.Operational.WebApi.Controllers.LeadController">
      <summary>
        Service that manages leads
      </summary>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.LeadController.#ctor(Microsoft.Extensions.Logging.ILogger{ControllerBase},AutoMapper.IMapper,Assistance.Operational.Bll.Services.ILeadService)">
      <summary>
        Constructor
      </summary>
      <param name="logger"></param>
      <param name="mapper"></param>
      <param name="userService"></param>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.LeadController.Post(Dto.CreateLeadRequestDto)">
      <summary>
        Register a new lead (now considered as an User in Intercom)
      </summary>
      <returns>The mission</returns>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.LeadController.PostFile(System.String,Microsoft.AspNetCore.Http.IFormFile)">
      <summary>
        Register a new lead
      </summary>
      <returns>The mission</returns>
    </member>
    <member name="T:Assistance.Operational.WebApi.Controllers.MissionController">
      <summary>
        Manages the mission (details and listing) page
      </summary>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.MissionController.#ctor(Microsoft.Extensions.Logging.ILogger{ControllerBase},AutoMapper.IMapper,Assistance.Operational.Bll.Services.IMissionService)">
      <summary>
        Constructor
      </summary>
      <param name="logger"></param>
      <param name="mapper"></param>
      <param name="missionService"></param>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.MissionController.Get(System.String)">
      <summary>
        Get a mission aggregate root from it's id
      </summary>
      <returns>The mission</returns>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.MissionController.GetFromOrganization(System.String)">
      <summary>
        Gets all missions of the specified organization.
      </summary>
      <param name="id">Organization Id</param>
      <returns>Missions</returns>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.MissionController.Post(Dto.CreateMissionRequestDto)">
      <summary>
        Creates a mission and returns its id.
      </summary>
      <returns>The created mission id</returns>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.MissionController.Put(System.String,Dto.MissionDto)">
      <summary>
        Updates a mission and returns its new value.
      </summary>
      <returns>The updates mission</returns>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.MissionController.PutConsultant(System.String,System.String)">
      <summary>
        Invite and attach a consultant to a mission
      </summary>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.MissionController.GetMissionsFromUser(System.String,System.Boolean)">
      <summary>
        Gets all the missions the specified user is involved in.
      </summary>
      <returns>A collection of missions</returns>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.MissionController.GetCurrentMissionForConsultant(System.String)">
      <summary>
        Gets the current mission of the consultant. (MVP Only ?)
      </summary>
      <returns>A collection of missions</returns>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.MissionController.CancelMission(System.String)">
      <summary>
        Flags a mission as inactive
      </summary>
      <returns></returns>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.MissionController.DeleteMission(System.String)">
      <summary>
        Deletes a mission (used only for testing)
      </summary>
      <returns></returns>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.MissionController.GetContractPreview(Dto.CreateMissionRequestDto)">
      <summary>
        Gets a preview of the frame contract before creating the mission
      </summary>
      <param name="request"></param>
      <returns></returns>
    </member>
    <member name="T:Assistance.Operational.WebApi.Controllers.OrganizationController">
      <summary>
        Handles every aspect of the account creation and users/companies management
      </summary>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.OrganizationController.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Logging.ILogger{ControllerBase},AutoMapper.IMapper,Assistance.Operational.Bll.Services.IOrganizationService,Assistance.Operational.Bll.Services.IInviteService,Assistance.Operational.Bll.Services.IAccountService)">
      <summary>
        Constructor
      </summary>
      <param name="logger"></param>
      <param name="mapper"></param>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.OrganizationController.Get(System.String)">
      <summary>
        Gets organization by its id.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.OrganizationController.Get(System.Collections.Generic.List{System.String})">
      <summary>
        Gets organizations by their id.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.OrganizationController.Post(Assistance.Operational.Dto.OrganizationDto)">
      <summary>
        Creates an organization.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.OrganizationController.Put(System.String,Assistance.Operational.Dto.OrganizationDto)">
      <summary>
        Finds and replaces an organization.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.OrganizationController.Get(System.String,System.String)">
      <summary>
        Gets an organization member.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.OrganizationController.GetMembers(System.String)">
      <summary>
        Gets all members of an organization.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.OrganizationController.AcceptInvite(System.String)">
      <summary>
        Accept organization invite
      </summary>
      <param name="code"></param>
      <returns></returns>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.OrganizationController.AddMember(Dto.JoinOrganizationRequestDto)">
      <summary>
        Adds an organization member.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.OrganizationController.ModifyMember(System.String,Assistance.Operational.Dto.OrganizationMemberDto)">
      <summary>
        Modifies an organization member.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.OrganizationController.PartialUpdate(System.String,Assistance.Operational.Dto.OrganizationDto)">
      <summary>
        Partially updates an organization.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.OrganizationController.DeleteMember(System.String,System.String)">
      <summary>
        Deletes an organization member.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.OrganizationController.Get(System.Guid)">
      <summary>
        Gets invite by its code.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.OrganizationController.Post(System.String,Dto.CreateInvitationRequestDto)">
      <summary>
        Creates an invite.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.OrganizationController.GetInvites(System.String)">
      <summary>
        Gets all the invites of an organization.
      </summary>
      <returns></returns>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.OrganizationController.Delete(System.String)">
      <summary>
        Deletes an organization.
      </summary>
      <returns></returns>
    </member>
    <member name="T:Assistance.Operational.WebApi.Controllers.UserController">
      <summary>
        Service that manages users
      </summary>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.UserController.#ctor(Microsoft.Extensions.Logging.ILogger{ControllerBase},AutoMapper.IMapper,Assistance.Operational.Bll.Services.IUserService,Assistance.Operational.Bll.Services.IInviteService)">
      <summary>
        Constructor
      </summary>
      <param name="logger"></param>
      <param name="mapper"></param>
      <param name="userService"></param>
      <param name="inviteService"></param>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.UserController.Delete(System.String)">
      <summary>
        Unsubscribe an user
      </summary>
      <returns>The mission</returns>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.UserController.Get(System.String,System.String,System.String,System.String)">
      <summary>
        Search users
      </summary>
      <returns>The mission</returns>
    </member>
    <member name="M:Assistance.Operational.WebApi.Controllers.UserController.GetAll">
      <summary>
        Get all users
      </summary>
      <returns>The mission</returns>
    </member>
    <member name="T:Assistance.Operational.WebApi.Handlers.FormFileSwaggerFilter">
      <summary>
        Filter to enable handling file upload in swagger
      </summary>
    </member>
    <member name="T:Assistance.Operational.WebApi.Program">
      <summary>
        Web application program class to define the entry point.
      </summary>
    </member>
    <member name="M:Assistance.Operational.WebApi.Program.Main(System.String[])">
      <summary>
        Entry point call.
      </summary>
      <param name="args"></param>
    </member>
    <member name="M:Assistance.Operational.WebApi.Program.CreateWebHostBuilder(System.String[])">
      <summary>
        Create web host builder.
      </summary>
      <param name="args"></param>
      <returns></returns>
    </member>
    <member name="M:Assistance.Operational.WebApi.WebAppConfiguration.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
      <summary>
        Constructor
      </summary>
      <param name="configuration"></param>
    </member>
  </members>
</doc>
